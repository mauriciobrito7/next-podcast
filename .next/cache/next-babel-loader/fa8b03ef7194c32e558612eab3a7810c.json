{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\n\nfunction PodcastPlayer(_ref) {\n  var clip = _ref.clip,\n      onClose = _ref.onClose;\n  console.log(clip);\n  return __jsx(\"div\", {\n    className: \"clip\"\n  }, __jsx(\"nav\", null, onClose ? __jsx(\"a\", null, \"< Volver \") : __jsx(Link, null, __jsx(\"a\", {\n    className: \"close\"\n  }, \"< Volver\"))), __jsx(\"picture\", null, __jsx(\"div\", {\n    style: {\n      backgroundImage: \"url(\".concat(clip.urls.image || clip.channel.urls.logo_image.original, \")\")\n    }\n  })), __jsx(\"div\", {\n    className: \"player\"\n  }, __jsx(\"h3\", null, clip.title), __jsx(\"h6\", null, clip.channel.title), __jsx(\"audio\", {\n    control: true,\n    autoPlay: true\n  }, __jsx(\"source\", {\n    src: clip.urls.high_mp3,\n    type: \"audio/mpeg\"\n  }))));\n}\n\nexport default PodcastPlayer;","map":{"version":3,"sources":["C:/Users/Mauricio/Documents/Github/myFirstNextApp/components/PodcastPlayer.jsx"],"names":["Link","PodcastPlayer","clip","onClose","console","log","backgroundImage","urls","image","channel","logo_image","original","title","high_mp3"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;;AACA,SAASC,aAAT,OAA0C;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,OAAW,QAAXA,OAAW;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,mBACGC,OAAO,GACN,6BADM,GAGN,MAAC,IAAD,QACE;AAAG,IAAA,SAAS,EAAC;AAAb,gBADF,CAJJ,CADF,EAWE,uBACE;AACE,IAAA,KAAK,EAAE;AACLG,MAAAA,eAAe,gBAASJ,IAAI,CAACK,IAAL,CAAUC,KAAV,IACtBN,IAAI,CAACO,OAAL,CAAaF,IAAb,CAAkBG,UAAlB,CAA6BC,QADhB;AADV;AADT,IADF,CAXF,EAoBE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,kBAAKT,IAAI,CAACU,KAAV,CADF,EAEE,kBAAKV,IAAI,CAACO,OAAL,CAAaG,KAAlB,CAFF,EAGE;AAAO,IAAA,OAAO,MAAd;AAAe,IAAA,QAAQ,EAAE;AAAzB,KACE;AAAQ,IAAA,GAAG,EAAEV,IAAI,CAACK,IAAL,CAAUM,QAAvB;AAAiC,IAAA,IAAI,EAAC;AAAtC,IADF,CAHF,CApBF,CADF;AA8BD;;AAED,eAAeZ,aAAf","sourcesContent":["import Link from \"next/link\";\r\nfunction PodcastPlayer({ clip, onClose }) {\r\n  console.log(clip);\r\n  return (\r\n    <div className=\"clip\">\r\n      <nav>\r\n        {onClose ? (\r\n          <a>&lt; Volver </a>\r\n        ) : (\r\n          <Link>\r\n            <a className=\"close\">&lt; Volver</a>\r\n          </Link>\r\n        )}\r\n      </nav>\r\n\r\n      <picture>\r\n        <div\r\n          style={{\r\n            backgroundImage: `url(${clip.urls.image ||\r\n              clip.channel.urls.logo_image.original})`\r\n          }}\r\n        ></div>\r\n      </picture>\r\n\r\n      <div className=\"player\">\r\n        <h3>{clip.title}</h3>\r\n        <h6>{clip.channel.title}</h6>\r\n        <audio control autoPlay={true}>\r\n          <source src={clip.urls.high_mp3} type=\"audio/mpeg\" />\r\n        </audio>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PodcastPlayer;\r\n"]},"metadata":{},"sourceType":"module"}