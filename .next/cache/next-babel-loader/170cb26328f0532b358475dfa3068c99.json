{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"isomorphic-fetch\"; // components\n\nimport Layout from \"../components/Layout\";\nimport PodcastList from \"../components/PodcastList\";\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"openPodcast\", (event, podcast) => {\n      event.preventDefault();\n      this.setState({\n        openPodcast: podcast\n      });\n    });\n\n    this.setState({\n      openPodcast: false\n    });\n  }\n\n  static async getInitialProps({\n    query: {\n      id\n    }\n  }) {\n    // run in parallel\n    let [reqChannel, reqSeries, reqAudios] = await Promise.all([fetch(`https://api.audioboom.com/channels/${id}`), fetch(`https://api.audioboom.com/channels/${id}/child_channels`), fetch(`https://api.audioboom.com/channels/${id}/audio_clips`)]);\n    let dataChannel = await reqChannel.json();\n    let channel = dataChannel.body.channel;\n    let dataAudios = await reqAudios.json();\n    let audioClips = dataAudios.body.audio_clips;\n    let dataSeries = await reqSeries.json();\n    let series = dataSeries.body.channels;\n    return {\n      channel,\n      audioClips,\n      series\n    };\n  }\n\n  render() {\n    const {\n      channel,\n      audioClips,\n      series\n    } = this.props;\n    const {\n      openPodcast\n    } = this.state;\n    return __jsx(Layout, {\n      title: channel.title\n    }, openPodcast && __jsx(\"div\", null, \"Hay un podcast abierto\"), __jsx(\"h1\", null, channel.title), __jsx(\"h2\", null, \"Ultimos Podcasts\"), __jsx(PodcastList, {\n      podcasts: audioClips\n    }), __jsx(\"h2\", null, \"Series\"), series.map(serie => __jsx(\"div\", {\n      className: \"series\"\n    }, serie.title)));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Mauricio/Documents/Github/myFirstNextApp/pages/channel.jsx"],"names":["Layout","PodcastList","React","Component","constructor","props","event","podcast","preventDefault","setState","openPodcast","getInitialProps","query","id","reqChannel","reqSeries","reqAudios","Promise","all","fetch","dataChannel","json","channel","body","dataAudios","audioClips","audio_clips","dataSeries","series","channels","render","state","title","map","serie"],"mappings":";;;;;AAAA,OAAO,kBAAP,C,CACA;;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,eAAe,cAAcC,KAAK,CAACC,SAApB,CAA8B;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,yCAwBL,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAChCD,MAAAA,KAAK,CAACE,cAAN;AACA,WAAKC,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAEH;AADD,OAAd;AAGD,KA7BkB;;AAEjB,SAAKE,QAAL,CAAc;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAd;AACD;;AAED,eAAaC,eAAb,CAA6B;AAAEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AAAT,GAA7B,EAAgD;AAC9C;AACA,QAAI,CAACC,UAAD,EAAaC,SAAb,EAAwBC,SAAxB,IAAqC,MAAMC,OAAO,CAACC,GAAR,CAAY,CACzDC,KAAK,CAAE,sCAAqCN,EAAG,EAA1C,CADoD,EAEzDM,KAAK,CAAE,sCAAqCN,EAAG,iBAA1C,CAFoD,EAGzDM,KAAK,CAAE,sCAAqCN,EAAG,cAA1C,CAHoD,CAAZ,CAA/C;AAKA,QAAIO,WAAW,GAAG,MAAMN,UAAU,CAACO,IAAX,EAAxB;AACA,QAAIC,OAAO,GAAGF,WAAW,CAACG,IAAZ,CAAiBD,OAA/B;AAEA,QAAIE,UAAU,GAAG,MAAMR,SAAS,CAACK,IAAV,EAAvB;AACA,QAAII,UAAU,GAAGD,UAAU,CAACD,IAAX,CAAgBG,WAAjC;AAEA,QAAIC,UAAU,GAAG,MAAMZ,SAAS,CAACM,IAAV,EAAvB;AACA,QAAIO,MAAM,GAAGD,UAAU,CAACJ,IAAX,CAAgBM,QAA7B;AAEA,WAAO;AAAEP,MAAAA,OAAF;AAAWG,MAAAA,UAAX;AAAuBG,MAAAA;AAAvB,KAAP;AACD;;AASDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA,OAAF;AAAWG,MAAAA,UAAX;AAAuBG,MAAAA;AAAvB,QAAkC,KAAKvB,KAA7C;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAkB,KAAKqB,KAA7B;AACA,WACE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAET,OAAO,CAACU;AAAvB,OACGtB,WAAW,IAAI,4CADlB,EAGE,kBAAKY,OAAO,CAACU,KAAb,CAHF,EAKE,qCALF,EAME,MAAC,WAAD;AAAa,MAAA,QAAQ,EAAEP;AAAvB,MANF,EAQE,2BARF,EASGG,MAAM,CAACK,GAAP,CAAWC,KAAK,IACf;AAAK,MAAA,SAAS,EAAC;AAAf,OAAyBA,KAAK,CAACF,KAA/B,CADD,CATH,CADF;AAeD;;AAlD0C","sourcesContent":["import \"isomorphic-fetch\";\r\n// components\r\nimport Layout from \"../components/Layout\";\r\nimport PodcastList from \"../components/PodcastList\";\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.setState({ openPodcast: false });\r\n  }\r\n\r\n  static async getInitialProps({ query: { id } }) {\r\n    // run in parallel\r\n    let [reqChannel, reqSeries, reqAudios] = await Promise.all([\r\n      fetch(`https://api.audioboom.com/channels/${id}`),\r\n      fetch(`https://api.audioboom.com/channels/${id}/child_channels`),\r\n      fetch(`https://api.audioboom.com/channels/${id}/audio_clips`)\r\n    ]);\r\n    let dataChannel = await reqChannel.json();\r\n    let channel = dataChannel.body.channel;\r\n\r\n    let dataAudios = await reqAudios.json();\r\n    let audioClips = dataAudios.body.audio_clips;\r\n\r\n    let dataSeries = await reqSeries.json();\r\n    let series = dataSeries.body.channels;\r\n\r\n    return { channel, audioClips, series };\r\n  }\r\n\r\n  openPodcast = (event, podcast) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      openPodcast: podcast\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { channel, audioClips, series } = this.props;\r\n    const { openPodcast } = this.state;\r\n    return (\r\n      <Layout title={channel.title}>\r\n        {openPodcast && <div>Hay un podcast abierto</div>}\r\n\r\n        <h1>{channel.title}</h1>\r\n\r\n        <h2>Ultimos Podcasts</h2>\r\n        <PodcastList podcasts={audioClips} />\r\n\r\n        <h2>Series</h2>\r\n        {series.map(serie => (\r\n          <div className=\"series\">{serie.title}</div>\r\n        ))}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}