{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mauricio\\\\Documents\\\\Github\\\\myFirstNextApp\\\\pages\\\\channel.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar _default = /*#__PURE__*/function (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_default).apply(this, arguments));\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          channel = _this$props.channel,\n          audioClips = _this$props.audioClips;\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, channel.title), audioClips.map(function (clip) {\n        return __jsx(\"div\", {\n          className: \"audio\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, clip.title);\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var id, reqChannel, dataChannel, channel, reqAudio, dataAudios, audioClips, reqSeries, dataSeries, series;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              id = _ref.query.id;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(\"https://api.audioboom.com/channels/\".concat(id)));\n\n            case 3:\n              reqChannel = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(reqChannel.json());\n\n            case 6:\n              dataChannel = _context.sent;\n              channel = dataChannel.body.channel;\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(fetch(\"https://api.audioboom.com/channels/\".concat(id, \"/audio_clips\")));\n\n            case 10:\n              reqAudio = _context.sent;\n              _context.next = 13;\n              return _regeneratorRuntime.awrap(reqAudio.json());\n\n            case 13:\n              dataAudios = _context.sent;\n              audioClips = dataAudios.body.audio_clips;\n              _context.next = 17;\n              return _regeneratorRuntime.awrap(fetch(\"https://api.audioboom.com/channels/\".concat(id, \"/child_channels\")));\n\n            case 17:\n              reqSeries = _context.sent;\n              _context.next = 20;\n              return _regeneratorRuntime.awrap(reqAudio.json());\n\n            case 20:\n              dataSeries = _context.sent;\n              series = dataSeries.body.channels;\n              return _context.abrupt(\"return\", {\n                channel: channel,\n                audioClips: audioClips\n              });\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["C:/Users/Mauricio/Documents/Github/myFirstNextApp/pages/channel.jsx"],"names":["props","channel","audioClips","title","map","clip","id","query","fetch","reqChannel","json","dataChannel","body","reqAudio","dataAudios","audio_clips","reqSeries","dataSeries","series","channels","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;6BAoBW;AAAA,wBACyB,KAAKA,KAD9B;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACUC,UADV,eACUA,UADV;AAEP,aACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,OAAO,CAACE,KAAb,CADF,EAEGD,UAAU,CAACE,GAAX,CAAe,UAAAC,IAAI;AAAA,eAClB;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwBA,IAAI,CAACF,KAA7B,CADkB;AAAA,OAAnB,CAFH,CADF;AAQD;;;;;;;;;AA7BuCG,cAAAA,E,QAATC,K,CAASD,E;;+CACfE,KAAK,8CAAuCF,EAAvC,E;;;AAAxBG,cAAAA,U;;+CACoBA,UAAU,CAACC,IAAX,E;;;AAApBC,cAAAA,W;AACAV,cAAAA,O,GAAUU,WAAW,CAACC,IAAZ,CAAiBX,O;;+CAEVO,KAAK,8CACcF,EADd,kB;;;AAAtBO,cAAAA,Q;;+CAGmBA,QAAQ,CAACH,IAAT,E;;;AAAnBI,cAAAA,U;AACAZ,cAAAA,U,GAAaY,UAAU,CAACF,IAAX,CAAgBG,W;;+CAEXP,KAAK,8CACaF,EADb,qB;;;AAAvBU,cAAAA,S;;+CAGmBH,QAAQ,CAACH,IAAT,E;;;AAAnBO,cAAAA,U;AACAC,cAAAA,M,GAASD,UAAU,CAACL,IAAX,CAAgBO,Q;+CAEtB;AAAElB,gBAAAA,OAAO,EAAPA,OAAF;AAAWC,gBAAAA,UAAU,EAAVA;AAAX,e;;;;;;;;;;;;EAlBkBkB,KAAK,CAACC,S","sourcesContent":["export default class extends React.Component {\r\n  static async getInitialProps({ query: { id } }) {\r\n    let reqChannel = await fetch(`https://api.audioboom.com/channels/${id}`);\r\n    let dataChannel = await reqChannel.json();\r\n    let channel = dataChannel.body.channel;\r\n\r\n    let reqAudio = await fetch(\r\n      `https://api.audioboom.com/channels/${id}/audio_clips`\r\n    );\r\n    let dataAudios = await reqAudio.json();\r\n    let audioClips = dataAudios.body.audio_clips;\r\n\r\n    let reqSeries = await fetch(\r\n      `https://api.audioboom.com/channels/${id}/child_channels`\r\n    );\r\n    let dataSeries = await reqAudio.json();\r\n    let series = dataSeries.body.channels;\r\n\r\n    return { channel, audioClips };\r\n  }\r\n  render() {\r\n    const { channel, audioClips } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <h1>{channel.title}</h1>\r\n        {audioClips.map(clip => (\r\n          <div className=\"audio\">{clip.title}</div>\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}