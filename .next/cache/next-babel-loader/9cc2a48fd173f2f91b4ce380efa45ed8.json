{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport \"isomorphic-fetch\"; // components\n\nimport Layout from \"../components/Layout\";\nimport PodcastList from \"../components/PodcastList\";\n\nvar _default = /*#__PURE__*/function (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"openPodcast\", function (event, podcast) {\n      event.preventDefault();\n\n      _this.setState({\n        openPodcast: podcast\n      });\n    });\n\n    _this.setState = {\n      openPodcast: null\n    };\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          channel = _this$props.channel,\n          audioClips = _this$props.audioClips,\n          series = _this$props.series;\n      var openPodcast = this.state.openPodcast;\n      return __jsx(Layout, {\n        title: channel.title\n      }, openPodcast && __jsx(\"div\", null, \"Hay un podcast abierto\"), __jsx(\"h1\", null, channel.title), __jsx(\"h2\", null, \"Ultimos Podcasts\"), __jsx(PodcastList, {\n        podcasts: audioClips\n      }), __jsx(\"h2\", null, \"Series\"), series.map(function (serie) {\n        return __jsx(\"div\", {\n          className: \"series\"\n        }, serie.title);\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var id, _ref2, _ref3, reqChannel, reqSeries, reqAudios, dataChannel, channel, dataAudios, audioClips, dataSeries, series;\n\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              id = _ref.query.id;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Promise.all([fetch(\"https://api.audioboom.com/channels/\".concat(id)), fetch(\"https://api.audioboom.com/channels/\".concat(id, \"/child_channels\")), fetch(\"https://api.audioboom.com/channels/\".concat(id, \"/audio_clips\"))]));\n\n            case 3:\n              _ref2 = _context.sent;\n              _ref3 = _slicedToArray(_ref2, 3);\n              reqChannel = _ref3[0];\n              reqSeries = _ref3[1];\n              reqAudios = _ref3[2];\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(reqChannel.json());\n\n            case 10:\n              dataChannel = _context.sent;\n              channel = dataChannel.body.channel;\n              _context.next = 14;\n              return _regeneratorRuntime.awrap(reqAudios.json());\n\n            case 14:\n              dataAudios = _context.sent;\n              audioClips = dataAudios.body.audio_clips;\n              _context.next = 18;\n              return _regeneratorRuntime.awrap(reqSeries.json());\n\n            case 18:\n              dataSeries = _context.sent;\n              series = dataSeries.body.channels;\n              return _context.abrupt(\"return\", {\n                channel: channel,\n                audioClips: audioClips,\n                series: series\n              });\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["C:/Users/Mauricio/Documents/Github/myFirstNextApp/pages/channel.jsx"],"names":["Layout","PodcastList","props","event","podcast","preventDefault","setState","openPodcast","channel","audioClips","series","state","title","map","serie","id","query","Promise","all","fetch","reqChannel","reqSeries","reqAudios","json","dataChannel","body","dataAudios","audio_clips","dataSeries","channels","React","Component"],"mappings":";;;;;;;;;;;AAAA,OAAO,kBAAP,C,CACA;;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;;;AAEE,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;;AADiB,kEAwBL,UAACC,KAAD,EAAQC,OAAR,EAAoB;AAChCD,MAAAA,KAAK,CAACE,cAAN;;AACA,YAAKC,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAEH;AADD,OAAd;AAGD,KA7BkB;;AAEjB,UAAKE,QAAL,GAAgB;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAhB;AAFiB;AAGlB;;;;6BA4BQ;AAAA,wBACiC,KAAKL,KADtC;AAAA,UACCM,OADD,eACCA,OADD;AAAA,UACUC,UADV,eACUA,UADV;AAAA,UACsBC,MADtB,eACsBA,MADtB;AAAA,UAECH,WAFD,GAEiB,KAAKI,KAFtB,CAECJ,WAFD;AAGP,aACE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAEC,OAAO,CAACI;AAAvB,SACGL,WAAW,IAAI,4CADlB,EAGE,kBAAKC,OAAO,CAACI,KAAb,CAHF,EAKE,qCALF,EAME,MAAC,WAAD;AAAa,QAAA,QAAQ,EAAEH;AAAvB,QANF,EAQE,2BARF,EASGC,MAAM,CAACG,GAAP,CAAW,UAAAC,KAAK;AAAA,eACf;AAAK,UAAA,SAAS,EAAC;AAAf,WAAyBA,KAAK,CAACF,KAA/B,CADe;AAAA,OAAhB,CATH,CADF;AAeD;;;;;;;;;;AA5CuCG,cAAAA,E,QAATC,K,CAASD,E;;+CAESE,OAAO,CAACC,GAAR,CAAY,CACzDC,KAAK,8CAAuCJ,EAAvC,EADoD,EAEzDI,KAAK,8CAAuCJ,EAAvC,qBAFoD,EAGzDI,KAAK,8CAAuCJ,EAAvC,kBAHoD,CAAZ,C;;;;;AAA1CK,cAAAA,U;AAAYC,cAAAA,S;AAAWC,cAAAA,S;;+CAKJF,UAAU,CAACG,IAAX,E;;;AAApBC,cAAAA,W;AACAhB,cAAAA,O,GAAUgB,WAAW,CAACC,IAAZ,CAAiBjB,O;;+CAERc,SAAS,CAACC,IAAV,E;;;AAAnBG,cAAAA,U;AACAjB,cAAAA,U,GAAaiB,UAAU,CAACD,IAAX,CAAgBE,W;;+CAEVN,SAAS,CAACE,IAAV,E;;;AAAnBK,cAAAA,U;AACAlB,cAAAA,M,GAASkB,UAAU,CAACH,IAAX,CAAgBI,Q;+CAEtB;AAAErB,gBAAAA,OAAO,EAAPA,OAAF;AAAWC,gBAAAA,UAAU,EAAVA,UAAX;AAAuBC,gBAAAA,MAAM,EAANA;AAAvB,e;;;;;;;;;;;;EAtBkBoB,KAAK,CAACC,S","sourcesContent":["import \"isomorphic-fetch\";\r\n// components\r\nimport Layout from \"../components/Layout\";\r\nimport PodcastList from \"../components/PodcastList\";\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.setState = { openPodcast: null };\r\n  }\r\n\r\n  static async getInitialProps({ query: { id } }) {\r\n    // run in parallel\r\n    let [reqChannel, reqSeries, reqAudios] = await Promise.all([\r\n      fetch(`https://api.audioboom.com/channels/${id}`),\r\n      fetch(`https://api.audioboom.com/channels/${id}/child_channels`),\r\n      fetch(`https://api.audioboom.com/channels/${id}/audio_clips`)\r\n    ]);\r\n    let dataChannel = await reqChannel.json();\r\n    let channel = dataChannel.body.channel;\r\n\r\n    let dataAudios = await reqAudios.json();\r\n    let audioClips = dataAudios.body.audio_clips;\r\n\r\n    let dataSeries = await reqSeries.json();\r\n    let series = dataSeries.body.channels;\r\n\r\n    return { channel, audioClips, series };\r\n  }\r\n\r\n  openPodcast = (event, podcast) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      openPodcast: podcast\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { channel, audioClips, series } = this.props;\r\n    const { openPodcast } = this.state;\r\n    return (\r\n      <Layout title={channel.title}>\r\n        {openPodcast && <div>Hay un podcast abierto</div>}\r\n\r\n        <h1>{channel.title}</h1>\r\n\r\n        <h2>Ultimos Podcasts</h2>\r\n        <PodcastList podcasts={audioClips} />\r\n\r\n        <h2>Series</h2>\r\n        {series.map(serie => (\r\n          <div className=\"series\">{serie.title}</div>\r\n        ))}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}