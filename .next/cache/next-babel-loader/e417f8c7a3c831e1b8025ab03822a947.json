{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport \"isomorphic-fetch\";\n\nvar _default = /*#__PURE__*/function (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_default).apply(this, arguments));\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          channel = _this$props.channel,\n          audioClips = _this$props.audioClips,\n          series = _this$props.series;\n      return __jsx(React.Fragment, null, __jsx(\"h1\", null, channel.title), __jsx(\"h2\", null, \"Ultimos Podcasts\"), audioClips.map(function (clip) {\n        return __jsx(\"div\", {\n          className: \"audio\"\n        }, clip.title);\n      }), __jsx(\"h2\", null, \"Series\"), series.map(function (serie) {\n        return __jsx(\"div\", {\n          className: \"series\"\n        }, serie.title);\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var id, _ref2, _ref3, reqChannel, reqSeries, reqAudios, dataChannel, channel, dataAudios, audioClips, dataSeries, series;\n\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              id = _ref.query.id;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Promise.all([fetch(\"https://api.audioboom.com/channels/\".concat(id)), fetch(\"https://api.audioboom.com/channels/\".concat(id, \"/child_channels\")), fetch(\"https://api.audioboom.com/channels/\".concat(id, \"/audio_clips\"))]));\n\n            case 3:\n              _ref2 = _context.sent;\n              _ref3 = _slicedToArray(_ref2, 3);\n              reqChannel = _ref3[0];\n              reqSeries = _ref3[1];\n              reqAudios = _ref3[2];\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(reqChannel.json());\n\n            case 10:\n              dataChannel = _context.sent;\n              channel = dataChannel.body.channel;\n              _context.next = 14;\n              return _regeneratorRuntime.awrap(reqAudios.json());\n\n            case 14:\n              dataAudios = _context.sent;\n              audioClips = dataAudios.body.audio_clips;\n              _context.next = 18;\n              return _regeneratorRuntime.awrap(reqSeries.json());\n\n            case 18:\n              dataSeries = _context.sent;\n              series = dataSeries.body.channels;\n              return _context.abrupt(\"return\", {\n                channel: channel,\n                audioClips: audioClips,\n                series: series\n              });\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":null,"metadata":{},"sourceType":"module"}